{"version":3,"sources":["components/statistics/Statistics.js","components/options/FeedbackOptions.js","components/sectionTitle/SectionTitle.js","components/notification/Notification.js","components/App.js","index.js"],"names":["Title","styled","h2","Text","p","Statistics","good","neutral","bad","total","positivePercentage","Btn","button","FeedbackOptions","optionGoodBtn","optionNeutralBtn","optionBadBtn","onClick","Header","h1","SectionTitle","title","children","Notice","Notification","message","App","state","countGoodLikes","setState","prevState","props","step","countNeutralLikes","countBadLikes","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"2fAIA,IAAMA,EAAQC,IAAOC,GAAV,KAKJC,EAAOF,IAAOG,EAAV,KAKEC,EAAa,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAKC,EAAP,EAAOA,QAAQC,EAAf,EAAeA,IAAIC,EAAnB,EAAmBA,MAAMC,EAAzB,EAAyBA,mBAAzB,OAC1B,oCACA,kBAACV,EAAD,mBACI,kBAACG,EAAD,aAAYG,GACZ,kBAACH,EAAD,eAAcI,GACd,kBAACJ,EAAD,YAAWK,GACX,kBAACL,EAAD,cAAaM,GACb,kBAACN,EAAD,6BAA4BO,EAA5B,Q,gLClBJ,IAAMC,EAAMV,IAAOW,OAAV,KAOIC,EAAkB,SAAC,GAAD,IAAEC,EAAF,EAAEA,cAAcC,EAAhB,EAAgBA,iBAAiBC,EAAjC,EAAiCA,aAAjC,OAC/B,oCACQ,kBAACL,EAAD,CAAKM,QAAWH,GAAhB,QACA,kBAACH,EAAD,CAAKM,QAAWF,GAAhB,UACA,kBAACJ,EAAD,CAAKM,QAAWD,GAAhB,S,6JCXR,IAAME,EAASjB,IAAOkB,GAAV,KAOCC,EAAe,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAMC,EAAR,EAAQA,SAAR,OACxB,oCACI,kBAACJ,EAAD,KAASG,GACRC,I,qHCTT,IAAMC,EAAStB,IAAOG,EAAV,KAKCoB,EAAe,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACxB,oCACA,kBAACF,EAAD,KAASE,KCuDEC,E,4MA3DXC,MAAQ,CACJrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAIToB,eAAgB,WACZ,EAAKC,UAAS,SAACC,GAAD,MAAc,CAACxB,KAAKwB,EAAUxB,KAAO,EAAKyB,MAAMC,U,EAGlEC,kBAAkB,WACd,EAAKJ,UAAS,SAACC,GAAD,MAAc,CAACvB,QAAQuB,EAAUvB,QAAU,EAAKwB,MAAMC,U,EAGxEE,cAAc,WACV,EAAKL,UAAS,SAACC,GAAD,MAAc,CAACtB,IAAIsB,EAAUtB,IAAM,EAAKuB,MAAMC,U,EAOhEG,mBAAmB,WACf,OAAO,EAAKR,MAAMrB,KAAO,EAAKqB,MAAMpB,QAAU,EAAKoB,MAAMnB,K,EAG7D4B,gCAAkC,WAE9B,OAAOC,KAAKC,MAAyB,IAAlB,EAAKX,MAAMrB,KAAc,EAAK6B,uB,uDAI1C,IAAD,EACqBI,KAAKZ,MAAzBrB,EADD,EACCA,KAAKC,EADN,EACMA,QAAQC,EADd,EACcA,IAChB,OACJ,oCACA,kBAAC,EAAD,CAAca,MAAM,yBAChB,kBAAC,EAAD,CACAP,cAAiByB,KAAKX,eACtBb,iBAAoBwB,KAAKN,kBACzBjB,aAAgBuB,KAAKL,gBAEM,IAA9BK,KAAKJ,qBAA6B,kBAAC,EAAD,CAAcV,QAAQ,sBACxD,6BACG,kBAAC,EAAD,CACAnB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO8B,KAAKJ,qBACZzB,mBAAoB6B,KAAKH,2C,GAnDnBI,aCDlBC,IAASC,OAAO,kBAAC,EAAD,CAAKV,KAAM,IAAKW,SAASC,eAAe,W","file":"static/js/main.1cdd263d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst Title = styled.h2`\r\n font-size:2em;\r\n text-transform:uppercase;\r\n color: green;`\r\n\r\n const Text = styled.p`\r\n font-size:1.5em;\r\n font-weight:600;\r\n`\r\n\r\nexport const Statistics = ({good,neutral,bad,total,positivePercentage}) => (\r\n<> \r\n<Title>Statistics</Title>\r\n    <Text>Good:{good}</Text>\r\n    <Text>Neutal:{neutral}</Text>\r\n    <Text>Bad:{bad}</Text>\r\n    <Text>Total:{total}</Text>\r\n    <Text>Textositive Feedback {positivePercentage} %</Text>  \r\n</>\r\n);\r\n\r\nStatistics.propTypes = {\r\n    good:PropTypes.number.isRequired,\r\n    neutral:PropTypes.number.isRequired,\r\n    bad:PropTypes.number.isRequired,\r\n    total:PropTypes.number.isRequired,\r\n    positivePercentage:PropTypes.number.isRequired\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Btn = styled.button`\r\n font-size:1em;\r\n font-weight:600;\r\n padding:10px 20px;\r\n margin-right:10px;\r\n background-color:lightgray`\r\n\r\nexport const FeedbackOptions = ({optionGoodBtn,optionNeutralBtn,optionBadBtn}) => (\r\n<>    \r\n        <Btn onClick = {optionGoodBtn}>Good</Btn>\r\n        <Btn onClick = {optionNeutralBtn}>Neutal</Btn>\r\n        <Btn onClick = {optionBadBtn}>Bad</Btn>\r\n</>\r\n);\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Header = styled.h1`\r\nfont-family:sans-serif;\r\nfont-weight:600;\r\nfont-size:2em;\r\ntext-transform:uppercase;\r\n`\r\n\r\nexport const SectionTitle = ({title,children}) => (\r\n    <>\r\n        <Header>{title}</Header>\r\n        {children}\r\n    </>\r\n);\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst Notice = styled.p`\r\nfont-size:1.5em;\r\nfont-weight:600;\r\ncolor:red;`\r\n\r\nexport const Notification = ({message}) => (\r\n    <>\r\n    <Notice>{message}</Notice>\r\n    </>\r\n);\r\n\r\nNotification.propTypes = {\r\n    message:PropTypes.string\r\n}","import React, { Component } from 'react';\r\nimport {Statistics} from './statistics/Statistics'\r\nimport {FeedbackOptions} from './options/FeedbackOptions'\r\nimport {SectionTitle} from './sectionTitle/SectionTitle'\r\nimport {Notification} from './notification/Notification'\r\n\r\nclass App extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n        // total:0\r\n    }\r\n\r\n    countGoodLikes =() => {\r\n        this.setState((prevState)=>({good:prevState.good + this.props.step}))\r\n    }\r\n\r\n    countNeutralLikes=()=>{\r\n        this.setState((prevState)=>({neutral:prevState.neutral + this.props.step}))\r\n    }\r\n\r\n    countBadLikes=()=>{\r\n        this.setState((prevState)=>({bad:prevState.bad + this.props.step}))\r\n    }\r\n\r\n    // countTotalFeedback=()=> { \r\n    //     this.setState((prevState)=>({total:prevState.total + this.props.step}))\r\n    //     }\r\n\r\n    countTotalFeedback=()=> {         \r\n        return this.state.good + this.state.neutral + this.state.bad\r\n    }\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        // const {good,total} = this.state\r\n        return Math.round((this.state.good * 100) / this.countTotalFeedback());\r\n    }\r\n\r\n\r\n    render () {\r\n        const {good,neutral,bad} = this.state;\r\n            return (\r\n        <>       \r\n        <SectionTitle title=\"Please leave feedback\">\r\n            <FeedbackOptions \r\n            optionGoodBtn = {this.countGoodLikes}\r\n            optionNeutralBtn = {this.countNeutralLikes}\r\n            optionBadBtn = {this.countBadLikes} />\r\n        {/* <button onClick = {()=>{this.countBadLikes(); this.countTotalFeedback()}}>Bad</button> */}\r\n        {this.countTotalFeedback() === 0 ? <Notification message=\"No feedback given\"/> :         \r\n        (<div> \r\n            <Statistics \r\n            good={good} \r\n            neutral={neutral} \r\n            bad={bad}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}/>\r\n        </div> \r\n        )} \r\n        </SectionTitle>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(<App step={1}/>,document.getElementById('root'))"],"sourceRoot":""}